

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sat Sep 07 15:16:45 2019

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F18325
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 1.42
    36                           ; Generated 13/04/2017 GMT
    37                           ; 
    38                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F18325 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000E                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  008C                     	;# 
   103  008E                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0097                     	;# 
   110  009B                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  010C                     	;# 
   117  010E                     	;# 
   118  0111                     	;# 
   119  0112                     	;# 
   120  0113                     	;# 
   121  0114                     	;# 
   122  0115                     	;# 
   123  0116                     	;# 
   124  0117                     	;# 
   125  0118                     	;# 
   126  0119                     	;# 
   127  018C                     	;# 
   128  018E                     	;# 
   129  0197                     	;# 
   130  0199                     	;# 
   131  0199                     	;# 
   132  0199                     	;# 
   133  019A                     	;# 
   134  019A                     	;# 
   135  019A                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019C                     	;# 
   142  019C                     	;# 
   143  019C                     	;# 
   144  019D                     	;# 
   145  019D                     	;# 
   146  019D                     	;# 
   147  019E                     	;# 
   148  019E                     	;# 
   149  019E                     	;# 
   150  019F                     	;# 
   151  019F                     	;# 
   152  019F                     	;# 
   153  019F                     	;# 
   154  019F                     	;# 
   155  020C                     	;# 
   156  020E                     	;# 
   157  0211                     	;# 
   158  0211                     	;# 
   159  0212                     	;# 
   160  0212                     	;# 
   161  0213                     	;# 
   162  0213                     	;# 
   163  0214                     	;# 
   164  0214                     	;# 
   165  0215                     	;# 
   166  0215                     	;# 
   167  0215                     	;# 
   168  0215                     	;# 
   169  0216                     	;# 
   170  0216                     	;# 
   171  0217                     	;# 
   172  0217                     	;# 
   173  0219                     	;# 
   174  021A                     	;# 
   175  021B                     	;# 
   176  021C                     	;# 
   177  021D                     	;# 
   178  021D                     	;# 
   179  021E                     	;# 
   180  021F                     	;# 
   181  028C                     	;# 
   182  028E                     	;# 
   183  0291                     	;# 
   184  0291                     	;# 
   185  0292                     	;# 
   186  0293                     	;# 
   187  0294                     	;# 
   188  0295                     	;# 
   189  0295                     	;# 
   190  0296                     	;# 
   191  0297                     	;# 
   192  0298                     	;# 
   193  029F                     	;# 
   194  030C                     	;# 
   195  030E                     	;# 
   196  0311                     	;# 
   197  0311                     	;# 
   198  0312                     	;# 
   199  0313                     	;# 
   200  0314                     	;# 
   201  0315                     	;# 
   202  0315                     	;# 
   203  0316                     	;# 
   204  0317                     	;# 
   205  0318                     	;# 
   206  038C                     	;# 
   207  038E                     	;# 
   208  0391                     	;# 
   209  0392                     	;# 
   210  0393                     	;# 
   211  0397                     	;# 
   212  0398                     	;# 
   213  0399                     	;# 
   214  039A                     	;# 
   215  039C                     	;# 
   216  039D                     	;# 
   217  039E                     	;# 
   218  039F                     	;# 
   219  0411                     	;# 
   220  0411                     	;# 
   221  0412                     	;# 
   222  0413                     	;# 
   223  0414                     	;# 
   224  0415                     	;# 
   225  0416                     	;# 
   226  0417                     	;# 
   227  0418                     	;# 
   228  0418                     	;# 
   229  0419                     	;# 
   230  041A                     	;# 
   231  041B                     	;# 
   232  041C                     	;# 
   233  041D                     	;# 
   234  041E                     	;# 
   235  041F                     	;# 
   236  0498                     	;# 
   237  0498                     	;# 
   238  0499                     	;# 
   239  049A                     	;# 
   240  049B                     	;# 
   241  049B                     	;# 
   242  049C                     	;# 
   243  049D                     	;# 
   244  049E                     	;# 
   245  049F                     	;# 
   246  0617                     	;# 
   247  0618                     	;# 
   248  0619                     	;# 
   249  0619                     	;# 
   250  061A                     	;# 
   251  061B                     	;# 
   252  061C                     	;# 
   253  061C                     	;# 
   254  061F                     	;# 
   255  0691                     	;# 
   256  0692                     	;# 
   257  0693                     	;# 
   258  0694                     	;# 
   259  0695                     	;# 
   260  0696                     	;# 
   261  0697                     	;# 
   262  0698                     	;# 
   263  0699                     	;# 
   264  0711                     	;# 
   265  0712                     	;# 
   266  0713                     	;# 
   267  0714                     	;# 
   268  0715                     	;# 
   269  0716                     	;# 
   270  0717                     	;# 
   271  0718                     	;# 
   272  0719                     	;# 
   273  0891                     	;# 
   274  0891                     	;# 
   275  0891                     	;# 
   276  0891                     	;# 
   277  0891                     	;# 
   278  0891                     	;# 
   279  0892                     	;# 
   280  0892                     	;# 
   281  0892                     	;# 
   282  0893                     	;# 
   283  0893                     	;# 
   284  0893                     	;# 
   285  0893                     	;# 
   286  0893                     	;# 
   287  0893                     	;# 
   288  0894                     	;# 
   289  0894                     	;# 
   290  0894                     	;# 
   291  0895                     	;# 
   292  0895                     	;# 
   293  0895                     	;# 
   294  0896                     	;# 
   295  0896                     	;# 
   296  0896                     	;# 
   297  089B                     	;# 
   298  0911                     	;# 
   299  0912                     	;# 
   300  0913                     	;# 
   301  0914                     	;# 
   302  0915                     	;# 
   303  0916                     	;# 
   304  0918                     	;# 
   305  0919                     	;# 
   306  091A                     	;# 
   307  091B                     	;# 
   308  091C                     	;# 
   309  091D                     	;# 
   310  091E                     	;# 
   311  091F                     	;# 
   312  0E0F                     	;# 
   313  0E10                     	;# 
   314  0E11                     	;# 
   315  0E12                     	;# 
   316  0E13                     	;# 
   317  0E14                     	;# 
   318  0E15                     	;# 
   319  0E16                     	;# 
   320  0E17                     	;# 
   321  0E18                     	;# 
   322  0E19                     	;# 
   323  0E1A                     	;# 
   324  0E1B                     	;# 
   325  0E1C                     	;# 
   326  0E1D                     	;# 
   327  0E1E                     	;# 
   328  0E1F                     	;# 
   329  0E20                     	;# 
   330  0E21                     	;# 
   331  0E22                     	;# 
   332  0E24                     	;# 
   333  0E25                     	;# 
   334  0E28                     	;# 
   335  0E29                     	;# 
   336  0E2A                     	;# 
   337  0E2B                     	;# 
   338  0E2C                     	;# 
   339  0E2D                     	;# 
   340  0E2E                     	;# 
   341  0E2F                     	;# 
   342  0E90                     	;# 
   343  0E91                     	;# 
   344  0E92                     	;# 
   345  0E94                     	;# 
   346  0E95                     	;# 
   347  0EA0                     	;# 
   348  0EA1                     	;# 
   349  0EA2                     	;# 
   350  0EA3                     	;# 
   351  0EA4                     	;# 
   352  0EA5                     	;# 
   353  0F0F                     	;# 
   354  0F10                     	;# 
   355  0F11                     	;# 
   356  0F12                     	;# 
   357  0F13                     	;# 
   358  0F14                     	;# 
   359  0F15                     	;# 
   360  0F16                     	;# 
   361  0F17                     	;# 
   362  0F18                     	;# 
   363  0F19                     	;# 
   364  0F1A                     	;# 
   365  0F1B                     	;# 
   366  0F1C                     	;# 
   367  0F1D                     	;# 
   368  0F1E                     	;# 
   369  0F1F                     	;# 
   370  0F20                     	;# 
   371  0F21                     	;# 
   372  0F22                     	;# 
   373  0F23                     	;# 
   374  0F24                     	;# 
   375  0F25                     	;# 
   376  0F26                     	;# 
   377  0F27                     	;# 
   378  0F28                     	;# 
   379  0F29                     	;# 
   380  0F2A                     	;# 
   381  0F2B                     	;# 
   382  0F2C                     	;# 
   383  0F2D                     	;# 
   384  0F2E                     	;# 
   385  0F2F                     	;# 
   386  0F30                     	;# 
   387  0F31                     	;# 
   388  0F32                     	;# 
   389  0F33                     	;# 
   390  0F34                     	;# 
   391  0F35                     	;# 
   392  0F36                     	;# 
   393  0F37                     	;# 
   394  0FE4                     	;# 
   395  0FE5                     	;# 
   396  0FE6                     	;# 
   397  0FE7                     	;# 
   398  0FE8                     	;# 
   399  0FE9                     	;# 
   400  0FEA                     	;# 
   401  0FEB                     	;# 
   402  0FED                     	;# 
   403  0FEE                     	;# 
   404  0FEF                     	;# 
   405                           
   406                           	psect	nvBANK0
   407  0028                     __pnvBANK0:	
   408  0028                     _delay:	
   409  0028                     	ds	2
   410  000B                     _INTCONbits	set	11
   411  001D                     _TMR2	set	29
   412  001E                     _PR2	set	30
   413  001F                     _T2CONbits	set	31
   414  000E                     _PORTC	set	14
   415  000C                     _PORTA	set	12
   416  000E                     _PORTCbits	set	14
   417  0011                     _PIR1bits	set	17
   418  0090                     _PIE0bits	set	144
   419  0091                     _PIE1bits	set	145
   420  009B                     _ADRESL	set	155
   421  009C                     _ADRESH	set	156
   422  009E                     _ADCON1bits	set	158
   423  009D                     _ADCON0bits	set	157
   424  0097                     _WDTCONbits	set	151
   425  008E                     _TRISCbits	set	142
   426  008C                     _TRISAbits	set	140
   427  0117                     _FVRCONbits	set	279
   428  018C                     _ANSELAbits	set	396
   429  018E                     _ANSELCbits	set	398
   430  0397                     _IOCCPbits	set	919
   431  0398                     _IOCCNbits	set	920
   432  0399                     _IOCCFbits	set	921
   433                           
   434                           ; #config settings
   435  0000                     
   436                           	psect	cinit
   437  006C                     start_initialization:	
   438  006C                     __initialization:	
   439                           
   440                           ; Clear objects allocated to COMMON
   441  006C  01FA               	clrf	__pbssCOMMON& (0+127)
   442  006D  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   443  006E  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   444  006F  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
   445                           
   446                           ; Clear objects allocated to BANK0
   447  0070  01A0               	clrf	__pbssBANK0& (0+127)
   448  0071  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   449  0072  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   450  0073  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   451  0074  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   452  0075  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   453  0076  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   454  0077  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   455  0078                     end_of_initialization:	
   456                           ;End of C runtime variable initialization code
   457                           
   458  0078                     __end_of__initialization:	
   459  0078  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   460  0079  0020               	movlb	0
   461  007A  3181  29EC         	ljmp	_main	;jump to C main() function
   462                           
   463                           	psect	bssCOMMON
   464  007A                     __pbssCOMMON:	
   465  007A                     _adc_count:	
   466  007A                     	ds	1
   467  007B                     _status:	
   468  007B                     	ds	1
   469  007C                     _portC:	
   470  007C                     	ds	1
   471  007D                     _portA:	
   472  007D                     	ds	1
   473                           
   474                           	psect	bssBANK0
   475  0020                     __pbssBANK0:	
   476  0020                     _adc_sum:	
   477  0020                     	ds	2
   478  0022                     _startup_count:	
   479  0022                     	ds	2
   480  0024                     _interrupt_count:	
   481  0024                     	ds	2
   482  0026                     _adc_value:	
   483  0026                     	ds	2
   484                           
   485                           	psect	cstackCOMMON
   486  0070                     __pcstackCOMMON:	
   487  0070                     ?_startup:	
   488  0070                     ?_run:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?_pptled_off:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ??_pptled_off:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ?_relay1_on:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ??_relay1_on:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_relay2_off:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ??_relay2_off:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_relay3_off:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ??_relay3_off:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_pptled_on:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ??_pptled_on:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_relay3_on:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ??_relay3_on:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_relay2_on:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ??_relay2_on:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_relay1_off:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ??_relay1_off:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?_adc_init:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_adc_set_channel:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_adc_start_conversion:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_timer_init:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_ISR:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ?_pwrled_on:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ??_pwrled_on:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_pwrled_off:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ??_pwrled_off:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ?_init:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ?_ioc_init:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ??_ioc_init:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_main:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?i1_adc_set_channel:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ??i1_adc_set_channel:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?i1_adc_start_conversion:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ??i1_adc_start_conversion:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_adc_get_result:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     i1adc_set_channel@channel:	
   594                           ; 2 bytes @ 0x0
   595                           
   596                           
   597                           ; 1 bytes @ 0x0
   598  0070                     	ds	2
   599  0072                     ??_adc_get_result:	
   600                           
   601                           ; 1 bytes @ 0x2
   602  0072                     	ds	2
   603  0074                     adc_get_result@adc_value:	
   604                           
   605                           ; 2 bytes @ 0x4
   606  0074                     	ds	2
   607  0076                     ??_startup:	
   608  0076                     ??_run:	
   609                           ; 1 bytes @ 0x6
   610                           
   611                           
   612                           ; 1 bytes @ 0x6
   613  0076                     	ds	2
   614  0078                     ??_ISR:	
   615                           
   616                           ; 1 bytes @ 0x8
   617  0078                     	ds	2
   618                           
   619                           	psect	cstackBANK0
   620  002A                     __pcstackBANK0:	
   621  002A                     ??_adc_init:	
   622  002A                     ??_adc_set_channel:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  002A                     ??_adc_start_conversion:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  002A                     ??_timer_init:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  002A                     adc_set_channel@channel:	
   632                           ; 1 bytes @ 0x0
   633                           
   634                           
   635                           ; 1 bytes @ 0x0
   636  002A                     	ds	1
   637  002B                     ??_init:	
   638  002B                     ??_main:	
   639                           ; 1 bytes @ 0x1
   640                           
   641                           
   642                           ; 1 bytes @ 0x1
   643  002B                     	ds	1
   644                           
   645                           	psect	maintext
   646  01EC                     __pmaintext:	
   647 ;;
   648 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   649 ;;
   650 ;; *************** function _main *****************
   651 ;; Defined at:
   652 ;;		line 422 in file "sequencer.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;		None
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   661 ;; Tracked objects:
   662 ;;		On entry : B1F/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   668 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   669 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   670 ;;Total ram usage:        1 bytes
   671 ;; Hardware stack levels required when called:    5
   672 ;; This function calls:
   673 ;;		_init
   674 ;; This function is called by:
   675 ;;		Startup code after reset
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           
   680                           ;psect for function _main
   681  01EC                     _main:	
   682                           
   683                           ;sequencer.c: 424: init();
   684                           
   685                           ;incstack = 0
   686                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   687  01EC  3181  213F  3181   	fcall	_init
   688  01EF                     l1270:	
   689                           ;sequencer.c: 426: while(1)
   690                           
   691                           
   692                           ;sequencer.c: 427: {
   693                           ;sequencer.c: 428: _delay((unsigned long)((50)*(1000000/4000.0)));
   694  01EF  3011               	movlw	17
   695  01F0  0020               	movlb	0	; select bank0
   696  01F1  00AB               	movwf	??_main
   697  01F2  303A               	movlw	58
   698  01F3                     u357:	
   699  01F3  0B89               	decfsz	9,f
   700  01F4  29F3               	goto	u357
   701  01F5  0BAB               	decfsz	??_main,f
   702  01F6  29F3               	goto	u357
   703  01F7  0000               	nop
   704  01F8  0064               	clrwdt	;# 
   705  01F9  29EF               	goto	l1270
   706  01FA                     __end_of_main:	
   707                           ;sequencer.c: 430: }
   708                           ;sequencer.c: 432: return;
   709                           
   710                           
   711                           	psect	text1
   712  013F                     __ptext1:	
   713 ;; *************** function _init *****************
   714 ;; Defined at:
   715 ;;		line 268 in file "sequencer.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;		None
   718 ;; Auto vars:     Size  Location     Type
   719 ;;		None
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   733 ;;Total ram usage:        0 bytes
   734 ;; Hardware stack levels used:    1
   735 ;; Hardware stack levels required when called:    4
   736 ;; This function calls:
   737 ;;		_adc_init
   738 ;;		_adc_set_channel
   739 ;;		_adc_start_conversion
   740 ;;		_timer_init
   741 ;; This function is called by:
   742 ;;		_main
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           
   747                           ;psect for function _init
   748  013F                     _init:	
   749                           
   750                           ;sequencer.c: 271: portA = 0x00;
   751                           
   752                           ;incstack = 0
   753                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   754  013F  01FD               	clrf	_portA
   755                           
   756                           ;sequencer.c: 272: PORTA = portA;
   757  0140  087D               	movf	_portA,w
   758  0141  0020               	movlb	0	; select bank0
   759  0142  008C               	movwf	12	;volatile
   760                           
   761                           ;sequencer.c: 273: portC = 0x00;
   762  0143  01FC               	clrf	_portC
   763                           
   764                           ;sequencer.c: 274: PORTC = portC;
   765  0144  087C               	movf	_portC,w
   766  0145  008E               	movwf	14	;volatile
   767                           
   768                           ;sequencer.c: 277: TRISAbits.TRISA4 = 0;
   769  0146  0021               	movlb	1	; select bank1
   770  0147  120C               	bcf	12,4	;volatile
   771                           
   772                           ;sequencer.c: 278: TRISAbits.TRISA5 = 0;
   773  0148  128C               	bcf	12,5	;volatile
   774                           
   775                           ;sequencer.c: 279: TRISCbits.TRISC5 = 0;
   776  0149  128E               	bcf	14,5	;volatile
   777                           
   778                           ;sequencer.c: 280: TRISCbits.TRISC4 = 0;
   779  014A  120E               	bcf	14,4	;volatile
   780                           
   781                           ;sequencer.c: 281: TRISCbits.TRISC3 = 0;
   782  014B  118E               	bcf	14,3	;volatile
   783                           
   784                           ;sequencer.c: 284: PORTA = portA;
   785  014C  087D               	movf	_portA,w
   786  014D  0020               	movlb	0	; select bank0
   787  014E  008C               	movwf	12	;volatile
   788                           
   789                           ;sequencer.c: 285: PORTC = portC;
   790  014F  087C               	movf	_portC,w
   791  0150  008E               	movwf	14	;volatile
   792                           
   793                           ;sequencer.c: 287: status = STATUS_STARTUP;
   794  0151  01FB               	clrf	_status
   795                           
   796                           ;sequencer.c: 288: interrupt_count = 0;
   797  0152  01A4               	clrf	_interrupt_count
   798  0153  01A5               	clrf	_interrupt_count+1
   799                           
   800                           ;sequencer.c: 289: startup_count = 0;
   801  0154  01A2               	clrf	_startup_count
   802  0155  01A3               	clrf	_startup_count+1
   803                           
   804                           ;sequencer.c: 290: adc_value = 0;
   805  0156  01A6               	clrf	_adc_value
   806  0157  01A7               	clrf	_adc_value+1
   807                           
   808                           ;sequencer.c: 291: adc_sum = 0;
   809  0158  01A0               	clrf	_adc_sum
   810  0159  01A1               	clrf	_adc_sum+1
   811                           
   812                           ;sequencer.c: 292: adc_count = 0;
   813  015A  01FA               	clrf	_adc_count
   814                           
   815                           ;sequencer.c: 293: delay = 200;
   816  015B  30C8               	movlw	200
   817  015C  00A8               	movwf	_delay
   818  015D  3000               	movlw	0
   819  015E  00A9               	movwf	_delay+1
   820                           
   821                           ;sequencer.c: 296: TRISCbits.TRISC1 = 1;
   822  015F  0021               	movlb	1	; select bank1
   823  0160  148E               	bsf	14,1	;volatile
   824                           
   825                           ;sequencer.c: 297: ANSELCbits.ANSC1 = 0;
   826  0161  0023               	movlb	3	; select bank3
   827  0162  108E               	bcf	14,1	;volatile
   828                           
   829                           ;sequencer.c: 300: TRISCbits.TRISC0 = 1;
   830  0163  0021               	movlb	1	; select bank1
   831  0164  140E               	bsf	14,0	;volatile
   832                           
   833                           ;sequencer.c: 301: ANSELCbits.ANSC0 = 1;
   834  0165  0023               	movlb	3	; select bank3
   835  0166  140E               	bsf	14,0	;volatile
   836                           
   837                           ;sequencer.c: 304: TRISCbits.TRISC0 = 1;
   838  0167  0021               	movlb	1	; select bank1
   839  0168  140E               	bsf	14,0	;volatile
   840                           
   841                           ;sequencer.c: 305: ANSELCbits.ANSC0 = 1;
   842  0169  0023               	movlb	3	; select bank3
   843  016A  140E               	bsf	14,0	;volatile
   844                           
   845                           ;sequencer.c: 308: TRISAbits.TRISA2 = 1;
   846  016B  0021               	movlb	1	; select bank1
   847  016C  150C               	bsf	12,2	;volatile
   848                           
   849                           ;sequencer.c: 309: ANSELAbits.ANSA2 = 1;
   850  016D  0023               	movlb	3	; select bank3
   851  016E  150C               	bsf	12,2	;volatile
   852                           
   853                           ;sequencer.c: 313: WDTCONbits.WDTPS4 = 0;
   854  016F  0021               	movlb	1	; select bank1
   855  0170  1297               	bcf	23,5	;volatile
   856                           
   857                           ;sequencer.c: 314: WDTCONbits.WDTPS3 = 1;
   858  0171  1617               	bsf	23,4	;volatile
   859                           
   860                           ;sequencer.c: 315: WDTCONbits.WDTPS2 = 0;
   861  0172  1197               	bcf	23,3	;volatile
   862                           
   863                           ;sequencer.c: 316: WDTCONbits.WDTPS1 = 1;
   864  0173  1517               	bsf	23,2	;volatile
   865                           
   866                           ;sequencer.c: 317: WDTCONbits.WDTPS0 = 0;
   867  0174  1097               	bcf	23,1	;volatile
   868  0175  0064               	clrwdt	;# 
   869                           
   870                           ;sequencer.c: 321: adc_init();
   871  0176  3181  21FA  3181   	fcall	_adc_init
   872                           
   873                           ;sequencer.c: 322: adc_set_channel(ADC_CHANNEL_INPUTVOLTAGE);
   874  0179  3000               	movlw	0
   875  017A  3181  21A2  3181   	fcall	_adc_set_channel
   876                           
   877                           ;sequencer.c: 323: adc_start_conversion();
   878  017D  3182  224D  3181   	fcall	_adc_start_conversion
   879                           
   880                           ;sequencer.c: 325: timer_init();
   881  0180  3181  21DA         	fcall	_timer_init
   882  0182  0008               	return
   883  0183                     __end_of_init:	
   884                           
   885                           	psect	text2
   886  01DA                     __ptext2:	
   887 ;; *************** function _timer_init *****************
   888 ;; Defined at:
   889 ;;		line 384 in file "sequencer.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;		None
   892 ;; Auto vars:     Size  Location     Type
   893 ;;		None
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, status,2, status,0
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   907 ;;Total ram usage:        0 bytes
   908 ;; Hardware stack levels used:    1
   909 ;; Hardware stack levels required when called:    3
   910 ;; This function calls:
   911 ;;		Nothing
   912 ;; This function is called by:
   913 ;;		_init
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           
   918                           ;psect for function _timer_init
   919  01DA                     _timer_init:	
   920                           
   921                           ;sequencer.c: 387: T2CONbits.T2CKPS = 0b10;
   922                           
   923                           ;incstack = 0
   924                           ; Regs used in _timer_init: [wreg+status,2+status,0]
   925  01DA  0020               	movlb	0	; select bank0
   926  01DB  081F               	movf	31,w	;volatile
   927  01DC  39FC               	andlw	-4
   928  01DD  3802               	iorlw	2
   929  01DE  009F               	movwf	31	;volatile
   930                           
   931                           ;sequencer.c: 389: T2CONbits.T2OUTPS = 0b0000;
   932  01DF  3087               	movlw	-121
   933  01E0  059F               	andwf	31,f	;volatile
   934                           
   935                           ;sequencer.c: 392: PR2 = 16;
   936  01E1  3010               	movlw	16
   937  01E2  009E               	movwf	30	;volatile
   938                           
   939                           ;sequencer.c: 394: TMR2 = 0x00;
   940  01E3  019D               	clrf	29	;volatile
   941                           
   942                           ;sequencer.c: 396: PIR1bits.TMR2IF = 0;
   943  01E4  1091               	bcf	17,1	;volatile
   944                           
   945                           ;sequencer.c: 398: INTCONbits.GIE = 1;
   946  01E5  178B               	bsf	11,7	;volatile
   947                           
   948                           ;sequencer.c: 400: INTCONbits.PEIE = 1;
   949  01E6  170B               	bsf	11,6	;volatile
   950                           
   951                           ;sequencer.c: 402: PIE1bits.TMR2IE = 1;
   952  01E7  0021               	movlb	1	; select bank1
   953  01E8  1491               	bsf	17,1	;volatile
   954                           
   955                           ;sequencer.c: 404: T2CONbits.TMR2ON = 1;
   956  01E9  0020               	movlb	0	; select bank0
   957  01EA  151F               	bsf	31,2	;volatile
   958  01EB  0008               	return
   959  01EC                     __end_of_timer_init:	
   960                           
   961                           	psect	text3
   962  024D                     __ptext3:	
   963 ;; *************** function _adc_start_conversion *****************
   964 ;; Defined at:
   965 ;;		line 363 in file "sequencer.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;		None
   968 ;; Auto vars:     Size  Location     Type
   969 ;;		None
   970 ;; Return value:  Size  Location     Type
   971 ;;                  1    wreg      void 
   972 ;; Registers used:
   973 ;;		None
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   983 ;;Total ram usage:        0 bytes
   984 ;; Hardware stack levels used:    1
   985 ;; Hardware stack levels required when called:    3
   986 ;; This function calls:
   987 ;;		Nothing
   988 ;; This function is called by:
   989 ;;		_init
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           
   994                           ;psect for function _adc_start_conversion
   995  024D                     _adc_start_conversion:	
   996                           
   997                           ;sequencer.c: 366: ADCON0bits.GO = 1;
   998                           
   999                           ;incstack = 0
  1000                           ; Regs used in _adc_start_conversion: []
  1001  024D  0021               	movlb	1	; select bank1
  1002  024E  149D               	bsf	29,1	;volatile
  1003  024F  0008               	return
  1004  0250                     __end_of_adc_start_conversion:	
  1005                           
  1006                           	psect	text4
  1007  01A2                     __ptext4:	
  1008 ;; *************** function _adc_set_channel *****************
  1009 ;; Defined at:
  1010 ;;		line 344 in file "sequencer.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;  channel         1    wreg     enum E7419
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  channel         1    0[BANK0 ] enum E7419
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      void 
  1017 ;; Registers used:
  1018 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1025 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1027 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1028 ;;Total ram usage:        1 bytes
  1029 ;; Hardware stack levels used:    1
  1030 ;; Hardware stack levels required when called:    3
  1031 ;; This function calls:
  1032 ;;		Nothing
  1033 ;; This function is called by:
  1034 ;;		_init
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           
  1039                           ;psect for function _adc_set_channel
  1040  01A2                     _adc_set_channel:	
  1041                           
  1042                           ;incstack = 0
  1043                           ; Regs used in _adc_set_channel: [wreg-fsr0h+status,2+status,0]
  1044                           ;adc_set_channel@channel stored from wreg
  1045  01A2  0020               	movlb	0	; select bank0
  1046  01A3  00AA               	movwf	adc_set_channel@channel
  1047                           
  1048                           ;sequencer.c: 346: switch(channel)
  1049  01A4  29B5               	goto	l1020
  1050  01A5                     l1014:	
  1051                           ;sequencer.c: 347: {
  1052                           ;sequencer.c: 348: case ADC_CHANNEL_INPUTVOLTAGE:
  1053                           
  1054                           
  1055                           ;sequencer.c: 350: ADCON0bits.CHS = 0b010000;
  1056  01A5  0021               	movlb	1	; select bank1
  1057  01A6  081D               	movf	29,w	;volatile
  1058  01A7  3903               	andlw	-253
  1059  01A8  3840               	iorlw	64
  1060  01A9  009D               	movwf	29	;volatile
  1061                           
  1062                           ;sequencer.c: 352: ADCON1bits.ADPREF = 0b11;
  1063  01AA  3003               	movlw	3
  1064  01AB  049E               	iorwf	30,f	;volatile
  1065                           
  1066                           ;sequencer.c: 353: break;
  1067  01AC  0008               	return
  1068  01AD                     l1016:	
  1069                           ;sequencer.c: 354: case ADC_CHANNEL_SPEED:
  1070                           
  1071                           
  1072                           ;sequencer.c: 356: ADCON0bits.CHS = 0b000010;
  1073  01AD  0021               	movlb	1	; select bank1
  1074  01AE  081D               	movf	29,w	;volatile
  1075  01AF  3903               	andlw	-253
  1076  01B0  3808               	iorlw	8
  1077  01B1  009D               	movwf	29	;volatile
  1078                           
  1079                           ;sequencer.c: 358: ADCON1bits.ADPREF = 0b00;
  1080  01B2  30FC               	movlw	-4
  1081  01B3  059E               	andwf	30,f	;volatile
  1082                           
  1083                           ;sequencer.c: 360: }
  1084                           
  1085                           ;sequencer.c: 359: break;
  1086  01B4  0008               	return
  1087  01B5                     l1020:	
  1088  01B5  0020               	movlb	0	; select bank0
  1089  01B6  082A               	movf	adc_set_channel@channel,w
  1090                           
  1091                           ; Switch size 1, requested type "space"
  1092                           ; Number of cases is 2, Range of values is 0 to 1
  1093                           ; switch strategies available:
  1094                           ; Name         Instructions Cycles
  1095                           ; simple_byte            7     4 (average)
  1096                           ; direct_byte           10     6 (fixed)
  1097                           ; jumptable            260     6 (fixed)
  1098                           ;	Chosen strategy is simple_byte
  1099  01B7  3A00               	xorlw	0	; case 0
  1100  01B8  1903               	skipnz
  1101  01B9  29A5               	goto	l1014
  1102  01BA  3A01               	xorlw	1	; case 1
  1103  01BB  1903               	skipnz
  1104  01BC  29AD               	goto	l1016
  1105  01BD  29BE               	goto	l161
  1106  01BE                     l161:	
  1107  01BE  0008               	return
  1108  01BF                     __end_of_adc_set_channel:	
  1109                           
  1110                           	psect	text5
  1111  01FA                     __ptext5:	
  1112 ;; *************** function _adc_init *****************
  1113 ;; Defined at:
  1114 ;;		line 328 in file "sequencer.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;		None
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;		None
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      void 
  1121 ;; Registers used:
  1122 ;;		wreg, status,2, status,0
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1132 ;;Total ram usage:        0 bytes
  1133 ;; Hardware stack levels used:    1
  1134 ;; Hardware stack levels required when called:    3
  1135 ;; This function calls:
  1136 ;;		Nothing
  1137 ;; This function is called by:
  1138 ;;		_init
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           
  1143                           ;psect for function _adc_init
  1144  01FA                     _adc_init:	
  1145                           
  1146                           ;sequencer.c: 331: FVRCONbits.FVREN = 1;
  1147                           
  1148                           ;incstack = 0
  1149                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  1150  01FA  0022               	movlb	2	; select bank2
  1151  01FB  1797               	bsf	23,7	;volatile
  1152                           
  1153                           ;sequencer.c: 333: FVRCONbits.ADFVR = 0b11;
  1154  01FC  3003               	movlw	3
  1155  01FD  0497               	iorwf	23,f	;volatile
  1156                           
  1157                           ;sequencer.c: 335: ADCON0bits.ADON = 1;
  1158  01FE  0021               	movlb	1	; select bank1
  1159  01FF  141D               	bsf	29,0	;volatile
  1160                           
  1161                           ;sequencer.c: 337: ADCON1bits.ADCS = 0b000;
  1162  0200  308F               	movlw	-113
  1163  0201  059E               	andwf	30,f	;volatile
  1164                           
  1165                           ;sequencer.c: 339: ADCON1bits.ADNREF = 0;
  1166  0202  111E               	bcf	30,2	;volatile
  1167                           
  1168                           ;sequencer.c: 341: ADCON1bits.ADFM = 1;
  1169  0203  179E               	bsf	30,7	;volatile
  1170  0204  0008               	return
  1171  0205                     __end_of_adc_init:	
  1172                           
  1173                           	psect	intentry
  1174  0004                     __pintentry:	
  1175 ;; *************** function _ISR *****************
  1176 ;; Defined at:
  1177 ;;		line 136 in file "sequencer.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1193 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1194 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1195 ;;Total ram usage:        2 bytes
  1196 ;; Hardware stack levels used:    1
  1197 ;; Hardware stack levels required when called:    2
  1198 ;; This function calls:
  1199 ;;		_pptled_off
  1200 ;;		_pptled_on
  1201 ;;		_relay1_off
  1202 ;;		_relay1_on
  1203 ;;		_relay2_off
  1204 ;;		_relay2_on
  1205 ;;		_relay3_off
  1206 ;;		_relay3_on
  1207 ;;		_run
  1208 ;;		_startup
  1209 ;; This function is called by:
  1210 ;;		Interrupt level 1
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214  0004                     _ISR:	
  1215                           
  1216                           ;incstack = 0
  1217  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1218                           
  1219                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1220  0005  3180               	pagesel	$
  1221  0006  0020               	movlb	0	; select bank0
  1222  0007  087F               	movf	127,w
  1223  0008  00F9               	movwf	??_ISR+1
  1224                           
  1225                           ;sequencer.c: 139: if(PIR1bits.TMR2IF)
  1226  0009  1C91               	btfss	17,1	;volatile
  1227  000A  2817               	goto	i1l1222
  1228                           
  1229                           ;sequencer.c: 140: {
  1230                           ;sequencer.c: 141: if(status==STATUS_STARTUP)
  1231  000B  087B               	movf	_status,w
  1232  000C  1D03               	btfss	3,2
  1233  000D  2812               	goto	i1l1218
  1234                           
  1235                           ;sequencer.c: 142: {
  1236                           ;sequencer.c: 143: startup();
  1237  000E  3180  207C  3180   	fcall	_startup
  1238                           
  1239                           ;sequencer.c: 144: }
  1240  0011  2815               	goto	i1l1220
  1241  0012                     i1l1218:	
  1242                           
  1243                           ;sequencer.c: 145: else
  1244                           ;sequencer.c: 146: {
  1245                           ;sequencer.c: 147: run();
  1246  0012  3180  20DF  3180   	fcall	_run
  1247  0015                     i1l1220:	
  1248                           
  1249                           ;sequencer.c: 148: }
  1250                           ;sequencer.c: 150: PIR1bits.TMR2IF = 0;
  1251  0015  0020               	movlb	0	; select bank0
  1252  0016  1091               	bcf	17,1	;volatile
  1253  0017                     i1l1222:	
  1254                           
  1255                           ;sequencer.c: 151: }
  1256                           ;sequencer.c: 154: if(IOCCFbits.IOCCF1 && IOCCNbits.IOCCN1 && IOCCPbits.IOCCP1)
  1257  0017  0027               	movlb	7	; select bank7
  1258  0018  1899               	btfsc	25,1	;volatile
  1259  0019  1C98               	btfss	24,1	;volatile
  1260  001A  2865               	goto	i1l115
  1261  001B  1C97               	btfss	23,1	;volatile
  1262  001C  2865               	goto	i1l115
  1263                           
  1264                           ;sequencer.c: 155: {
  1265                           ;sequencer.c: 156: interrupt_count = 0;
  1266  001D  0020               	movlb	0	; select bank0
  1267  001E  01A4               	clrf	_interrupt_count
  1268  001F  01A5               	clrf	_interrupt_count+1
  1269                           
  1270                           ;sequencer.c: 157: if(PORTCbits.RC1)
  1271  0020  1C8E               	btfss	14,1	;volatile
  1272  0021  2842               	goto	i1l1250
  1273                           
  1274                           ;sequencer.c: 158: {
  1275                           ;sequencer.c: 159: pptled_off();
  1276  0022  3182  220D  3180   	fcall	_pptled_off
  1277                           
  1278                           ;sequencer.c: 160: switch(status)
  1279  0025  2836               	goto	i1l1248
  1280  0026                     i1l1234:	
  1281                           ;sequencer.c: 161: {
  1282                           ;sequencer.c: 162: case STATUS_PREAMP_OFF:
  1283                           
  1284                           
  1285                           ;sequencer.c: 163: relay1_on();
  1286  0026  3182  2248  3180   	fcall	_relay1_on
  1287                           
  1288                           ;sequencer.c: 164: status = STATUS_RX_MODE;
  1289  0029  01FB               	clrf	_status
  1290  002A  0AFB               	incf	_status,f
  1291                           
  1292                           ;sequencer.c: 165: break;
  1293  002B  2863               	goto	i1l109
  1294  002C                     i1l1238:	
  1295                           ;sequencer.c: 166: case STATUS_RELAY_ON:
  1296                           
  1297                           
  1298                           ;sequencer.c: 167: relay2_off();
  1299  002C  3182  2215  3180   	fcall	_relay2_off
  1300                           
  1301                           ;sequencer.c: 168: status = STATUS_RELAY_OFF;
  1302  002F  3006               	movlw	6
  1303  0030  2854               	goto	L4
  1304  0031                     i1l1242:	
  1305                           ;sequencer.c: 170: case STATUS_TX_MODE:
  1306                           
  1307                           ;sequencer.c: 169: break;
  1308                           
  1309                           
  1310                           ;sequencer.c: 171: relay3_off();
  1311  0031  3182  221D  3180   	fcall	_relay3_off
  1312                           
  1313                           ;sequencer.c: 172: status = STATUS_AMPLIFIER_OFF;
  1314  0034  3005               	movlw	5
  1315  0035  2854               	goto	L4
  1316  0036                     i1l1248:	
  1317                           ;sequencer.c: 174: }
  1318                           
  1319                           ;sequencer.c: 173: break;
  1320                           
  1321  0036  087B               	movf	_status,w
  1322                           
  1323                           ; Switch size 1, requested type "space"
  1324                           ; Number of cases is 3, Range of values is 2 to 4
  1325                           ; switch strategies available:
  1326                           ; Name         Instructions Cycles
  1327                           ; simple_byte           10     6 (average)
  1328                           ; direct_byte           15     9 (fixed)
  1329                           ; jumptable            263     9 (fixed)
  1330                           ;	Chosen strategy is simple_byte
  1331  0037  3A02               	xorlw	2	; case 2
  1332  0038  1903               	skipnz
  1333  0039  2826               	goto	i1l1234
  1334  003A  3A01               	xorlw	1	; case 3
  1335  003B  1903               	skipnz
  1336  003C  282C               	goto	i1l1238
  1337  003D  3A07               	xorlw	7	; case 4
  1338  003E  1903               	skipnz
  1339  003F  2831               	goto	i1l1242
  1340  0040  2863               	goto	i1l109
  1341                           
  1342                           ;sequencer.c: 175: }
  1343  0041  2863               	goto	i1l109
  1344  0042                     i1l1250:	
  1345                           
  1346                           ;sequencer.c: 176: else
  1347                           ;sequencer.c: 177: {
  1348                           ;sequencer.c: 178: pptled_on();
  1349  0042  3182  2239  3180   	fcall	_pptled_on
  1350                           
  1351                           ;sequencer.c: 179: switch(status)
  1352  0045  2858               	goto	i1l1266
  1353  0046                     i1l1252:	
  1354                           ;sequencer.c: 180: {
  1355                           ;sequencer.c: 181: case STATUS_AMPLIFIER_OFF:
  1356                           
  1357                           
  1358                           ;sequencer.c: 182: relay3_on();
  1359  0046  3182  223E  3180   	fcall	_relay3_on
  1360                           
  1361                           ;sequencer.c: 183: status = STATUS_TX_MODE;
  1362  0049  3004               	movlw	4
  1363  004A  2854               	goto	L4
  1364  004B                     i1l1256:	
  1365                           ;sequencer.c: 185: case STATUS_RELAY_OFF:
  1366                           
  1367                           ;sequencer.c: 184: break;
  1368                           
  1369                           
  1370                           ;sequencer.c: 186: relay2_on();
  1371  004B  3182  2243  3180   	fcall	_relay2_on
  1372                           
  1373                           ;sequencer.c: 187: status = STATUS_RELAY_ON;
  1374  004E  3003               	movlw	3
  1375  004F  2854               	goto	L4
  1376  0050                     i1l1260:	
  1377                           ;sequencer.c: 189: case STATUS_RX_MODE:
  1378                           
  1379                           ;sequencer.c: 188: break;
  1380                           
  1381                           
  1382                           ;sequencer.c: 190: relay1_off();
  1383  0050  3182  2225  3180   	fcall	_relay1_off
  1384                           
  1385                           ;sequencer.c: 191: status = STATUS_PREAMP_OFF;
  1386  0053  3002               	movlw	2
  1387  0054                     L4:	
  1388  0054  00F8               	movwf	??_ISR
  1389  0055  0878               	movf	??_ISR,w
  1390  0056  00FB               	movwf	_status
  1391                           
  1392                           ;sequencer.c: 193: }
  1393                           
  1394                           ;sequencer.c: 192: break;
  1395  0057  2863               	goto	i1l109
  1396  0058                     i1l1266:	
  1397  0058  087B               	movf	_status,w
  1398                           
  1399                           ; Switch size 1, requested type "space"
  1400                           ; Number of cases is 3, Range of values is 1 to 6
  1401                           ; switch strategies available:
  1402                           ; Name         Instructions Cycles
  1403                           ; simple_byte           10     6 (average)
  1404                           ; direct_byte           21     9 (fixed)
  1405                           ; jumptable            263     9 (fixed)
  1406                           ;	Chosen strategy is simple_byte
  1407  0059  3A01               	xorlw	1	; case 1
  1408  005A  1903               	skipnz
  1409  005B  2850               	goto	i1l1260
  1410  005C  3A04               	xorlw	4	; case 5
  1411  005D  1903               	skipnz
  1412  005E  2846               	goto	i1l1252
  1413  005F  3A03               	xorlw	3	; case 6
  1414  0060  1903               	skipnz
  1415  0061  284B               	goto	i1l1256
  1416  0062  2863               	goto	i1l109
  1417  0063                     i1l109:	
  1418                           
  1419                           ;sequencer.c: 194: }
  1420                           ;sequencer.c: 196: IOCCFbits.IOCCF1 = 0;
  1421  0063  0027               	movlb	7	; select bank7
  1422  0064  1099               	bcf	25,1	;volatile
  1423  0065                     i1l115:	
  1424  0065  0879               	movf	??_ISR+1,w
  1425  0066  0020               	movlb	0	; select bank0
  1426  0067  00FF               	movwf	127
  1427  0068  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1428  0069  0009               	retfie
  1429  006A                     __end_of_ISR:	
  1430                           
  1431                           	psect	text7
  1432  007C                     __ptext7:	
  1433 ;; *************** function _startup *****************
  1434 ;; Defined at:
  1435 ;;		line 435 in file "sequencer.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;		None
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;		None
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  1    wreg      void 
  1442 ;; Registers used:
  1443 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1451 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1452 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1453 ;;Total ram usage:        1 bytes
  1454 ;; Hardware stack levels used:    1
  1455 ;; Hardware stack levels required when called:    1
  1456 ;; This function calls:
  1457 ;;		_adc_get_result
  1458 ;;		_ioc_init
  1459 ;;		_pptled_off
  1460 ;;		_pptled_on
  1461 ;;		_pwrled_off
  1462 ;;		_pwrled_on
  1463 ;;		_relay1_on
  1464 ;;		_relay2_on
  1465 ;;		i1_adc_set_channel
  1466 ;;		i1_adc_start_conversion
  1467 ;; This function is called by:
  1468 ;;		_ISR
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           
  1473                           ;psect for function _startup
  1474  007C                     _startup:	
  1475                           
  1476                           ;sequencer.c: 437: ++interrupt_count;
  1477                           
  1478                           ;incstack = 0
  1479                           ; Regs used in _startup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1480  007C  3001               	movlw	1
  1481  007D  0020               	movlb	0	; select bank0
  1482  007E  07A4               	addwf	_interrupt_count,f
  1483  007F  3000               	movlw	0
  1484  0080  3DA5               	addwfc	_interrupt_count+1,f
  1485                           
  1486                           ;sequencer.c: 438: adc_value = adc_get_result();
  1487  0081  3181  2183  3180   	fcall	_adc_get_result
  1488  0084  0871               	movf	?_adc_get_result+1,w
  1489  0085  0020               	movlb	0	; select bank0
  1490  0086  00A7               	movwf	_adc_value+1
  1491  0087  0870               	movf	?_adc_get_result,w
  1492  0088  00A6               	movwf	_adc_value
  1493                           
  1494                           ;sequencer.c: 439: if(adc_value<890)
  1495  0089  3003               	movlw	3
  1496  008A  0227               	subwf	_adc_value+1,w
  1497  008B  307A               	movlw	122
  1498  008C  1903               	skipnz
  1499  008D  0226               	subwf	_adc_value,w
  1500  008E  1803               	skipnc
  1501  008F  2892               	goto	i1l1068
  1502                           
  1503                           ;sequencer.c: 440: {
  1504                           ;sequencer.c: 441: startup_count = 0;
  1505  0090  01A2               	clrf	_startup_count
  1506  0091  01A3               	clrf	_startup_count+1
  1507  0092                     i1l1068:	
  1508                           
  1509                           ;sequencer.c: 442: }
  1510                           ;sequencer.c: 443: if(interrupt_count==100)
  1511  0092  3064               	movlw	100
  1512  0093  0624               	xorwf	_interrupt_count,w
  1513  0094  0425               	iorwf	_interrupt_count+1,w
  1514  0095  1D03               	btfss	3,2
  1515  0096  289D               	goto	i1l1072
  1516                           
  1517                           ;sequencer.c: 444: {
  1518                           ;sequencer.c: 445: pwrled_on();
  1519  0097  3182  2234  3180   	fcall	_pwrled_on
  1520                           
  1521                           ;sequencer.c: 446: pptled_off();
  1522  009A  3182  220D  3180   	fcall	_pptled_off
  1523  009D                     i1l1072:	
  1524                           
  1525                           ;sequencer.c: 447: }
  1526                           ;sequencer.c: 448: if(interrupt_count==200)
  1527  009D  30C8               	movlw	200
  1528  009E  0020               	movlb	0	; select bank0
  1529  009F  0624               	xorwf	_interrupt_count,w
  1530  00A0  0425               	iorwf	_interrupt_count+1,w
  1531  00A1  1D03               	btfss	3,2
  1532  00A2  28DC               	goto	i1l1100
  1533                           
  1534                           ;sequencer.c: 449: {
  1535                           ;sequencer.c: 450: ++startup_count;
  1536  00A3  3001               	movlw	1
  1537  00A4  07A2               	addwf	_startup_count,f
  1538  00A5  3000               	movlw	0
  1539  00A6  3DA3               	addwfc	_startup_count+1,f
  1540                           
  1541                           ;sequencer.c: 451: interrupt_count = 0;
  1542  00A7  01A4               	clrf	_interrupt_count
  1543  00A8  01A5               	clrf	_interrupt_count+1
  1544                           
  1545                           ;sequencer.c: 452: if(startup_count==8)
  1546  00A9  3008               	movlw	8
  1547  00AA  0622               	xorwf	_startup_count,w
  1548  00AB  0423               	iorwf	_startup_count+1,w
  1549  00AC  1D03               	btfss	3,2
  1550  00AD  28CE               	goto	i1l1094
  1551                           
  1552                           ;sequencer.c: 453: {
  1553                           ;sequencer.c: 454: adc_set_channel(ADC_CHANNEL_SPEED);
  1554  00AE  3001               	movlw	1
  1555  00AF  3181  21BF  3180   	fcall	i1_adc_set_channel
  1556                           
  1557                           ;sequencer.c: 455: startup_count = 0;
  1558  00B2  0020               	movlb	0	; select bank0
  1559  00B3  01A2               	clrf	_startup_count
  1560  00B4  01A3               	clrf	_startup_count+1
  1561                           
  1562                           ;sequencer.c: 456: if(PORTCbits.RC1)
  1563  00B5  1C8E               	btfss	14,1	;volatile
  1564  00B6  28C0               	goto	i1l1090
  1565                           
  1566                           ;sequencer.c: 457: {
  1567                           ;sequencer.c: 458: pptled_off();
  1568  00B7  3182  220D  3180   	fcall	_pptled_off
  1569                           
  1570                           ;sequencer.c: 459: relay1_on();
  1571  00BA  3182  2248  3180   	fcall	_relay1_on
  1572                           
  1573                           ;sequencer.c: 460: status = STATUS_RX_MODE;
  1574  00BD  01FB               	clrf	_status
  1575  00BE  0AFB               	incf	_status,f
  1576                           
  1577                           ;sequencer.c: 462: }
  1578  00BF  28CA               	goto	i1l192
  1579  00C0                     i1l1090:	
  1580                           
  1581                           ;sequencer.c: 463: else
  1582                           ;sequencer.c: 464: {
  1583                           ;sequencer.c: 465: pptled_on();
  1584  00C0  3182  2239  3180   	fcall	_pptled_on
  1585                           
  1586                           ;sequencer.c: 466: relay2_on();
  1587  00C3  3182  2243  3180   	fcall	_relay2_on
  1588                           
  1589                           ;sequencer.c: 467: status = STATUS_RELAY_ON;
  1590  00C6  3003               	movlw	3
  1591  00C7  00F6               	movwf	??_startup
  1592  00C8  0876               	movf	??_startup,w
  1593  00C9  00FB               	movwf	_status
  1594  00CA                     i1l192:	
  1595                           
  1596                           ;sequencer.c: 468: }
  1597                           ;sequencer.c: 469: ioc_init();
  1598  00CA  3182  222D  3180   	fcall	_ioc_init
  1599                           
  1600                           ;sequencer.c: 470: }
  1601  00CD  28DC               	goto	i1l1100
  1602  00CE                     i1l1094:	
  1603                           
  1604                           ;sequencer.c: 471: else
  1605                           ;sequencer.c: 472: {
  1606                           ;sequencer.c: 473: pwrled_off();
  1607  00CE  3182  2205  3180   	fcall	_pwrled_off
  1608                           
  1609                           ;sequencer.c: 474: if(adc_value<890)
  1610  00D1  3003               	movlw	3
  1611  00D2  0020               	movlb	0	; select bank0
  1612  00D3  0227               	subwf	_adc_value+1,w
  1613  00D4  307A               	movlw	122
  1614  00D5  1903               	skipnz
  1615  00D6  0226               	subwf	_adc_value,w
  1616  00D7  1803               	skipnc
  1617  00D8  28DC               	goto	i1l1100
  1618                           
  1619                           ;sequencer.c: 475: {
  1620                           ;sequencer.c: 476: pptled_on();
  1621  00D9  3182  2239  3180   	fcall	_pptled_on
  1622  00DC                     i1l1100:	
  1623                           
  1624                           ;sequencer.c: 477: }
  1625                           ;sequencer.c: 478: }
  1626                           ;sequencer.c: 479: }
  1627                           ;sequencer.c: 480: adc_start_conversion();
  1628  00DC  3182  2250         	fcall	i1_adc_start_conversion
  1629  00DE  0008               	return
  1630  00DF                     __end_of_startup:	
  1631                           
  1632                           	psect	text8
  1633  01BF                     __ptext8:	
  1634 ;; *************** function i1_adc_set_channel *****************
  1635 ;; Defined at:
  1636 ;;		line 344 in file "sequencer.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;  channel         1    wreg     enum E7419
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;  channel         1    0[COMMON] enum E7419
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1653 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1654 ;;Total ram usage:        1 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_startup
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           
  1664                           ;psect for function i1_adc_set_channel
  1665  01BF                     i1_adc_set_channel:	
  1666                           
  1667                           ;incstack = 0
  1668                           ; Regs used in i1_adc_set_channel: [wreg-fsr0h+status,2+status,0]
  1669                           ;i1adc_set_channel@channel stored from wreg
  1670  01BF  00F0               	movwf	i1adc_set_channel@channel
  1671                           
  1672                           ;sequencer.c: 346: switch(channel)
  1673  01C0  29D1               	goto	i1l1056
  1674  01C1                     i1l1050:	
  1675                           ;sequencer.c: 347: {
  1676                           ;sequencer.c: 348: case ADC_CHANNEL_INPUTVOLTAGE:
  1677                           
  1678                           
  1679                           ;sequencer.c: 350: ADCON0bits.CHS = 0b010000;
  1680  01C1  0021               	movlb	1	; select bank1
  1681  01C2  081D               	movf	29,w	;volatile
  1682  01C3  3903               	andlw	-253
  1683  01C4  3840               	iorlw	64
  1684  01C5  009D               	movwf	29	;volatile
  1685                           
  1686                           ;sequencer.c: 352: ADCON1bits.ADPREF = 0b11;
  1687  01C6  3003               	movlw	3
  1688  01C7  049E               	iorwf	30,f	;volatile
  1689                           
  1690                           ;sequencer.c: 353: break;
  1691  01C8  0008               	return
  1692  01C9                     i1l1052:	
  1693                           ;sequencer.c: 354: case ADC_CHANNEL_SPEED:
  1694                           
  1695                           
  1696                           ;sequencer.c: 356: ADCON0bits.CHS = 0b000010;
  1697  01C9  0021               	movlb	1	; select bank1
  1698  01CA  081D               	movf	29,w	;volatile
  1699  01CB  3903               	andlw	-253
  1700  01CC  3808               	iorlw	8
  1701  01CD  009D               	movwf	29	;volatile
  1702                           
  1703                           ;sequencer.c: 358: ADCON1bits.ADPREF = 0b00;
  1704  01CE  30FC               	movlw	-4
  1705  01CF  059E               	andwf	30,f	;volatile
  1706                           
  1707                           ;sequencer.c: 360: }
  1708                           
  1709                           ;sequencer.c: 359: break;
  1710  01D0  0008               	return
  1711  01D1                     i1l1056:	
  1712  01D1  0870               	movf	i1adc_set_channel@channel,w
  1713                           
  1714                           ; Switch size 1, requested type "space"
  1715                           ; Number of cases is 2, Range of values is 0 to 1
  1716                           ; switch strategies available:
  1717                           ; Name         Instructions Cycles
  1718                           ; simple_byte            7     4 (average)
  1719                           ; direct_byte           10     6 (fixed)
  1720                           ; jumptable            260     6 (fixed)
  1721                           ;	Chosen strategy is simple_byte
  1722  01D2  3A00               	xorlw	0	; case 0
  1723  01D3  1903               	skipnz
  1724  01D4  29C1               	goto	i1l1050
  1725  01D5  3A01               	xorlw	1	; case 1
  1726  01D6  1903               	skipnz
  1727  01D7  29C9               	goto	i1l1052
  1728  01D8  29D9               	goto	i1l161
  1729  01D9                     i1l161:	
  1730  01D9  0008               	return
  1731  01DA                     __end_ofi1_adc_set_channel:	
  1732                           
  1733                           	psect	text9
  1734  0234                     __ptext9:	
  1735 ;; *************** function _pwrled_on *****************
  1736 ;; Defined at:
  1737 ;;		line 202 in file "sequencer.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;		None
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;		None
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1755 ;;Total ram usage:        0 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; This function calls:
  1758 ;;		Nothing
  1759 ;; This function is called by:
  1760 ;;		_startup
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           
  1765                           ;psect for function _pwrled_on
  1766  0234                     _pwrled_on:	
  1767                           
  1768                           ;sequencer.c: 204: portA |= 0b00100000;
  1769                           
  1770                           ;incstack = 0
  1771                           ; Regs used in _pwrled_on: [wreg]
  1772  0234  16FD               	bsf	_portA,5
  1773                           
  1774                           ;sequencer.c: 205: PORTA = portA;
  1775  0235  087D               	movf	_portA,w
  1776  0236  0020               	movlb	0	; select bank0
  1777  0237  008C               	movwf	12	;volatile
  1778  0238  0008               	return
  1779  0239                     __end_of_pwrled_on:	
  1780                           
  1781                           	psect	text10
  1782  0205                     __ptext10:	
  1783 ;; *************** function _pwrled_off *****************
  1784 ;; Defined at:
  1785 ;;		line 208 in file "sequencer.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;		None
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;		None
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		wreg, status,2, status,0
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1801 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1802 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1803 ;;Total ram usage:        1 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_startup
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           
  1813                           ;psect for function _pwrled_off
  1814  0205                     _pwrled_off:	
  1815                           
  1816                           ;sequencer.c: 210: portA &= ~0b00100000;
  1817                           
  1818                           ;incstack = 0
  1819                           ; Regs used in _pwrled_off: [wreg+status,2+status,0]
  1820  0205  30DF               	movlw	223
  1821  0206  00F0               	movwf	??_pwrled_off
  1822  0207  0870               	movf	??_pwrled_off,w
  1823  0208  05FD               	andwf	_portA,f
  1824                           
  1825                           ;sequencer.c: 211: PORTA = portA;
  1826  0209  087D               	movf	_portA,w
  1827  020A  0020               	movlb	0	; select bank0
  1828  020B  008C               	movwf	12	;volatile
  1829  020C  0008               	return
  1830  020D                     __end_of_pwrled_off:	
  1831                           
  1832                           	psect	text11
  1833  0239                     __ptext11:	
  1834 ;; *************** function _pptled_on *****************
  1835 ;; Defined at:
  1836 ;;		line 220 in file "sequencer.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;		None
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      void 
  1843 ;; Registers used:
  1844 ;;		wreg
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1854 ;;Total ram usage:        0 bytes
  1855 ;; Hardware stack levels used:    1
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_ISR
  1860 ;;		_startup
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           
  1865                           ;psect for function _pptled_on
  1866  0239                     _pptled_on:	
  1867                           
  1868                           ;sequencer.c: 222: portA |= 0b00010000;
  1869                           
  1870                           ;incstack = 0
  1871                           ; Regs used in _pptled_on: [wreg]
  1872  0239  167D               	bsf	_portA,4
  1873                           
  1874                           ;sequencer.c: 223: PORTA = portA;
  1875  023A  087D               	movf	_portA,w
  1876  023B  0020               	movlb	0	; select bank0
  1877  023C  008C               	movwf	12	;volatile
  1878  023D  0008               	return
  1879  023E                     __end_of_pptled_on:	
  1880                           
  1881                           	psect	text12
  1882  020D                     __ptext12:	
  1883 ;; *************** function _pptled_off *****************
  1884 ;; Defined at:
  1885 ;;		line 226 in file "sequencer.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;		None
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;		None
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg, status,2, status,0
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1901 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1902 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1903 ;;Total ram usage:        1 bytes
  1904 ;; Hardware stack levels used:    1
  1905 ;; This function calls:
  1906 ;;		Nothing
  1907 ;; This function is called by:
  1908 ;;		_ISR
  1909 ;;		_startup
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           
  1914                           ;psect for function _pptled_off
  1915  020D                     _pptled_off:	
  1916                           
  1917                           ;sequencer.c: 228: portA &= ~0b00010000;
  1918                           
  1919                           ;incstack = 0
  1920                           ; Regs used in _pptled_off: [wreg+status,2+status,0]
  1921  020D  30EF               	movlw	239
  1922  020E  00F0               	movwf	??_pptled_off
  1923  020F  0870               	movf	??_pptled_off,w
  1924  0210  05FD               	andwf	_portA,f
  1925                           
  1926                           ;sequencer.c: 229: PORTA = portA;
  1927  0211  087D               	movf	_portA,w
  1928  0212  0020               	movlb	0	; select bank0
  1929  0213  008C               	movwf	12	;volatile
  1930  0214  0008               	return
  1931  0215                     __end_of_pptled_off:	
  1932                           
  1933                           	psect	text13
  1934  022D                     __ptext13:	
  1935 ;; *************** function _ioc_init *****************
  1936 ;; Defined at:
  1937 ;;		line 407 in file "sequencer.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;		None
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;		None
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		None
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1955 ;;Total ram usage:        0 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; This function calls:
  1958 ;;		Nothing
  1959 ;; This function is called by:
  1960 ;;		_startup
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           
  1965                           ;psect for function _ioc_init
  1966  022D                     _ioc_init:	
  1967                           
  1968                           ;sequencer.c: 409: IOCCNbits.IOCCN1 = 1;
  1969                           
  1970                           ;incstack = 0
  1971                           ; Regs used in _ioc_init: []
  1972  022D  0027               	movlb	7	; select bank7
  1973  022E  1498               	bsf	24,1	;volatile
  1974                           
  1975                           ;sequencer.c: 410: IOCCPbits.IOCCP1 = 1;
  1976  022F  1497               	bsf	23,1	;volatile
  1977                           
  1978                           ;sequencer.c: 411: IOCCFbits.IOCCF1 = 0;
  1979  0230  1099               	bcf	25,1	;volatile
  1980                           
  1981                           ;sequencer.c: 418: PIE0bits.IOCIE = 1;
  1982  0231  0021               	movlb	1	; select bank1
  1983  0232  1610               	bsf	16,4	;volatile
  1984  0233  0008               	return
  1985  0234                     __end_of_ioc_init:	
  1986                           
  1987                           	psect	text14
  1988  00DF                     __ptext14:	
  1989 ;; *************** function _run *****************
  1990 ;; Defined at:
  1991 ;;		line 483 in file "sequencer.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;		None
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;		None
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2007 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2008 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2009 ;;Total ram usage:        2 bytes
  2010 ;; Hardware stack levels used:    1
  2011 ;; Hardware stack levels required when called:    1
  2012 ;; This function calls:
  2013 ;;		_adc_get_result
  2014 ;;		_relay1_on
  2015 ;;		_relay2_off
  2016 ;;		_relay2_on
  2017 ;;		_relay3_on
  2018 ;;		i1_adc_start_conversion
  2019 ;; This function is called by:
  2020 ;;		_ISR
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           
  2025                           ;psect for function _run
  2026  00DF                     _run:	
  2027                           
  2028                           ;sequencer.c: 486: adc_sum += adc_get_result();
  2029                           
  2030                           ;incstack = 0
  2031                           ; Regs used in _run: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2032  00DF  3181  2183  3180   	fcall	_adc_get_result
  2033  00E2  0870               	movf	?_adc_get_result,w
  2034  00E3  0020               	movlb	0	; select bank0
  2035  00E4  07A0               	addwf	_adc_sum,f
  2036  00E5  0871               	movf	?_adc_get_result+1,w
  2037  00E6  3DA1               	addwfc	_adc_sum+1,f
  2038                           
  2039                           ;sequencer.c: 487: adc_start_conversion();
  2040  00E7  3182  2250  3180   	fcall	i1_adc_start_conversion
  2041                           
  2042                           ;sequencer.c: 488: ++adc_count;
  2043  00EA  3001               	movlw	1
  2044  00EB  00F6               	movwf	??_run
  2045  00EC  0876               	movf	??_run,w
  2046  00ED  07FA               	addwf	_adc_count,f
  2047                           
  2048                           ;sequencer.c: 489: if(adc_count==32)
  2049  00EE  3020               	movlw	32
  2050  00EF  067A               	xorwf	_adc_count,w
  2051  00F0  1D03               	btfss	3,2
  2052  00F1  2907               	goto	i1l1114
  2053                           
  2054                           ;sequencer.c: 490: {
  2055                           ;sequencer.c: 491: delay = adc_sum >> 7;
  2056  00F2  0020               	movlb	0	; select bank0
  2057  00F3  0821               	movf	_adc_sum+1,w
  2058  00F4  00F7               	movwf	??_run+1
  2059  00F5  0820               	movf	_adc_sum,w
  2060  00F6  00F6               	movwf	??_run
  2061  00F7  3007               	movlw	7
  2062  00F8                     u27_25:	
  2063  00F8  36F7               	lsrf	??_run+1,f
  2064  00F9  0CF6               	rrf	??_run,f
  2065  00FA  0B89               	decfsz	9,f
  2066  00FB  28F8               	goto	u27_25
  2067  00FC  0876               	movf	??_run,w
  2068  00FD  00A8               	movwf	_delay
  2069  00FE  0877               	movf	??_run+1,w
  2070  00FF  00A9               	movwf	_delay+1
  2071                           
  2072                           ;sequencer.c: 492: delay += 70;
  2073  0100  3046               	movlw	70
  2074  0101  07A8               	addwf	_delay,f
  2075  0102  3000               	movlw	0
  2076  0103  3DA9               	addwfc	_delay+1,f
  2077                           
  2078                           ;sequencer.c: 493: adc_sum = 0;
  2079  0104  01A0               	clrf	_adc_sum
  2080  0105  01A1               	clrf	_adc_sum+1
  2081                           
  2082                           ;sequencer.c: 494: adc_count = 0;
  2083  0106  01FA               	clrf	_adc_count
  2084  0107                     i1l1114:	
  2085                           
  2086                           ;sequencer.c: 495: }
  2087                           ;sequencer.c: 497: ++interrupt_count;
  2088  0107  3001               	movlw	1
  2089  0108  0020               	movlb	0	; select bank0
  2090  0109  07A4               	addwf	_interrupt_count,f
  2091  010A  3000               	movlw	0
  2092  010B  3DA5               	addwfc	_interrupt_count+1,f
  2093                           
  2094                           ;sequencer.c: 499: if(interrupt_count==delay)
  2095  010C  0829               	movf	_delay+1,w
  2096  010D  0625               	xorwf	_interrupt_count+1,w
  2097  010E  1D03               	skipz
  2098  010F  2912               	goto	u28_25
  2099  0110  0828               	movf	_delay,w
  2100  0111  0624               	xorwf	_interrupt_count,w
  2101  0112                     u28_25:	
  2102  0112  1D03               	skipz
  2103  0113  0008               	return
  2104  0114  292D               	goto	i1l1138
  2105  0115                     i1l1120:	
  2106                           ;sequencer.c: 502: {
  2107                           ;sequencer.c: 503: case STATUS_AMPLIFIER_OFF:
  2108                           
  2109                           ;sequencer.c: 500: {
  2110                           ;sequencer.c: 501: switch(status)
  2111                           
  2112                           
  2113                           ;sequencer.c: 504: relay2_off();
  2114  0115  3182  2215  3180   	fcall	_relay2_off
  2115                           
  2116                           ;sequencer.c: 505: status = STATUS_RELAY_OFF;
  2117  0118  3006               	movlw	6
  2118  0119  2929               	goto	L6
  2119  011A                     i1l1124:	
  2120                           ;sequencer.c: 507: case STATUS_RELAY_OFF:
  2121                           
  2122                           ;sequencer.c: 506: break;
  2123                           
  2124                           
  2125                           ;sequencer.c: 508: relay1_on();
  2126  011A  3182  2248  3180   	fcall	_relay1_on
  2127                           
  2128                           ;sequencer.c: 509: status = STATUS_RX_MODE;
  2129  011D  01FB               	clrf	_status
  2130  011E  0AFB               	incf	_status,f
  2131                           
  2132                           ;sequencer.c: 510: break;
  2133  011F  293B               	goto	i1l1140
  2134  0120                     i1l1128:	
  2135                           ;sequencer.c: 511: case STATUS_PREAMP_OFF:
  2136                           
  2137                           
  2138                           ;sequencer.c: 512: relay2_on();
  2139  0120  3182  2243  3180   	fcall	_relay2_on
  2140                           
  2141                           ;sequencer.c: 513: status = STATUS_RELAY_ON;
  2142  0123  3003               	movlw	3
  2143  0124  2929               	goto	L6
  2144  0125                     i1l1132:	
  2145                           ;sequencer.c: 515: case STATUS_RELAY_ON:
  2146                           
  2147                           ;sequencer.c: 514: break;
  2148                           
  2149                           
  2150                           ;sequencer.c: 516: relay3_on();
  2151  0125  3182  223E  3180   	fcall	_relay3_on
  2152                           
  2153                           ;sequencer.c: 517: status = STATUS_TX_MODE;
  2154  0128  3004               	movlw	4
  2155  0129                     L6:	
  2156  0129  00F6               	movwf	??_run
  2157  012A  0876               	movf	??_run,w
  2158  012B  00FB               	movwf	_status
  2159                           
  2160                           ;sequencer.c: 519: }
  2161                           
  2162                           ;sequencer.c: 518: break;
  2163  012C  293B               	goto	i1l1140
  2164  012D                     i1l1138:	
  2165  012D  087B               	movf	_status,w
  2166                           
  2167                           ; Switch size 1, requested type "space"
  2168                           ; Number of cases is 4, Range of values is 2 to 6
  2169                           ; switch strategies available:
  2170                           ; Name         Instructions Cycles
  2171                           ; simple_byte           13     7 (average)
  2172                           ; direct_byte           19     9 (fixed)
  2173                           ; jumptable            263     9 (fixed)
  2174                           ;	Chosen strategy is simple_byte
  2175  012E  3A02               	xorlw	2	; case 2
  2176  012F  1903               	skipnz
  2177  0130  2920               	goto	i1l1128
  2178  0131  3A01               	xorlw	1	; case 3
  2179  0132  1903               	skipnz
  2180  0133  2925               	goto	i1l1132
  2181  0134  3A06               	xorlw	6	; case 5
  2182  0135  1903               	skipnz
  2183  0136  2915               	goto	i1l1120
  2184  0137  3A03               	xorlw	3	; case 6
  2185  0138  1903               	skipnz
  2186  0139  291A               	goto	i1l1124
  2187  013A  293B               	goto	i1l1140
  2188  013B                     i1l1140:	
  2189                           
  2190                           ;sequencer.c: 520: interrupt_count = 0;
  2191  013B  0020               	movlb	0	; select bank0
  2192  013C  01A4               	clrf	_interrupt_count
  2193  013D  01A5               	clrf	_interrupt_count+1
  2194  013E  0008               	return
  2195  013F                     __end_of_run:	
  2196                           
  2197                           	psect	text15
  2198  0250                     __ptext15:	
  2199 ;; *************** function i1_adc_start_conversion *****************
  2200 ;; Defined at:
  2201 ;;		line 363 in file "sequencer.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;		None
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;		None
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		None
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2219 ;;Total ram usage:        0 bytes
  2220 ;; Hardware stack levels used:    1
  2221 ;; This function calls:
  2222 ;;		Nothing
  2223 ;; This function is called by:
  2224 ;;		_startup
  2225 ;;		_run
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           
  2230                           ;psect for function i1_adc_start_conversion
  2231  0250                     i1_adc_start_conversion:	
  2232                           
  2233                           ;sequencer.c: 366: ADCON0bits.GO = 1;
  2234                           
  2235                           ;incstack = 0
  2236                           ; Regs used in i1_adc_start_conversion: []
  2237  0250  0021               	movlb	1	; select bank1
  2238  0251  149D               	bsf	29,1	;volatile
  2239  0252  0008               	return
  2240  0253                     __end_ofi1_adc_start_conversion:	
  2241                           
  2242                           	psect	text16
  2243  023E                     __ptext16:	
  2244 ;; *************** function _relay3_on *****************
  2245 ;; Defined at:
  2246 ;;		line 256 in file "sequencer.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;		None
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		wreg
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2264 ;;Total ram usage:        0 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; This function calls:
  2267 ;;		Nothing
  2268 ;; This function is called by:
  2269 ;;		_ISR
  2270 ;;		_run
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           
  2275                           ;psect for function _relay3_on
  2276  023E                     _relay3_on:	
  2277                           
  2278                           ;sequencer.c: 258: portC |= 0b00001000;
  2279                           
  2280                           ;incstack = 0
  2281                           ; Regs used in _relay3_on: [wreg]
  2282  023E  15FC               	bsf	_portC,3
  2283                           
  2284                           ;sequencer.c: 259: PORTC = portC;
  2285  023F  087C               	movf	_portC,w
  2286  0240  0020               	movlb	0	; select bank0
  2287  0241  008E               	movwf	14	;volatile
  2288  0242  0008               	return
  2289  0243                     __end_of_relay3_on:	
  2290                           
  2291                           	psect	text17
  2292  0243                     __ptext17:	
  2293 ;; *************** function _relay2_on *****************
  2294 ;; Defined at:
  2295 ;;		line 244 in file "sequencer.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;		None
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;		None
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  1    wreg      void 
  2302 ;; Registers used:
  2303 ;;		wreg
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2313 ;;Total ram usage:        0 bytes
  2314 ;; Hardware stack levels used:    1
  2315 ;; This function calls:
  2316 ;;		Nothing
  2317 ;; This function is called by:
  2318 ;;		_ISR
  2319 ;;		_startup
  2320 ;;		_run
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           
  2325                           ;psect for function _relay2_on
  2326  0243                     _relay2_on:	
  2327                           
  2328                           ;sequencer.c: 246: portC |= 0b00010000;
  2329                           
  2330                           ;incstack = 0
  2331                           ; Regs used in _relay2_on: [wreg]
  2332  0243  167C               	bsf	_portC,4
  2333                           
  2334                           ;sequencer.c: 247: PORTC = portC;
  2335  0244  087C               	movf	_portC,w
  2336  0245  0020               	movlb	0	; select bank0
  2337  0246  008E               	movwf	14	;volatile
  2338  0247  0008               	return
  2339  0248                     __end_of_relay2_on:	
  2340                           
  2341                           	psect	text18
  2342  0215                     __ptext18:	
  2343 ;; *************** function _relay2_off *****************
  2344 ;; Defined at:
  2345 ;;		line 250 in file "sequencer.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;		None
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;		None
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		wreg, status,2, status,0
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2361 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2362 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2363 ;;Total ram usage:        1 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; This function calls:
  2366 ;;		Nothing
  2367 ;; This function is called by:
  2368 ;;		_ISR
  2369 ;;		_run
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           
  2374                           ;psect for function _relay2_off
  2375  0215                     _relay2_off:	
  2376                           
  2377                           ;sequencer.c: 252: portC &= ~0b00010000;
  2378                           
  2379                           ;incstack = 0
  2380                           ; Regs used in _relay2_off: [wreg+status,2+status,0]
  2381  0215  30EF               	movlw	239
  2382  0216  00F0               	movwf	??_relay2_off
  2383  0217  0870               	movf	??_relay2_off,w
  2384  0218  05FC               	andwf	_portC,f
  2385                           
  2386                           ;sequencer.c: 253: PORTC = portC;
  2387  0219  087C               	movf	_portC,w
  2388  021A  0020               	movlb	0	; select bank0
  2389  021B  008E               	movwf	14	;volatile
  2390  021C  0008               	return
  2391  021D                     __end_of_relay2_off:	
  2392                           
  2393                           	psect	text19
  2394  0248                     __ptext19:	
  2395 ;; *************** function _relay1_on *****************
  2396 ;; Defined at:
  2397 ;;		line 232 in file "sequencer.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;		None
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;		None
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      void 
  2404 ;; Registers used:
  2405 ;;		wreg
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2415 ;;Total ram usage:        0 bytes
  2416 ;; Hardware stack levels used:    1
  2417 ;; This function calls:
  2418 ;;		Nothing
  2419 ;; This function is called by:
  2420 ;;		_ISR
  2421 ;;		_startup
  2422 ;;		_run
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           
  2427                           ;psect for function _relay1_on
  2428  0248                     _relay1_on:	
  2429                           
  2430                           ;sequencer.c: 234: portC |= 0b00100000;
  2431                           
  2432                           ;incstack = 0
  2433                           ; Regs used in _relay1_on: [wreg]
  2434  0248  16FC               	bsf	_portC,5
  2435                           
  2436                           ;sequencer.c: 235: PORTC = portC;
  2437  0249  087C               	movf	_portC,w
  2438  024A  0020               	movlb	0	; select bank0
  2439  024B  008E               	movwf	14	;volatile
  2440  024C  0008               	return
  2441  024D                     __end_of_relay1_on:	
  2442                           
  2443                           	psect	text20
  2444  0183                     __ptext20:	
  2445 ;; *************** function _adc_get_result *****************
  2446 ;; Defined at:
  2447 ;;		line 369 in file "sequencer.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;		None
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;  adc_value       2    4[COMMON] unsigned int 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  2    0[COMMON] unsigned int 
  2454 ;; Registers used:
  2455 ;;		wreg
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2461 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2462 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2463 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2464 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2465 ;;Total ram usage:        6 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; This function calls:
  2468 ;;		Nothing
  2469 ;; This function is called by:
  2470 ;;		_startup
  2471 ;;		_run
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           
  2476                           ;psect for function _adc_get_result
  2477  0183                     _adc_get_result:	
  2478  0183                     i1l167:	
  2479                           ;sequencer.c: 371: uint16_t adc_value;
  2480                           ;sequencer.c: 373: while(ADCON0bits.GO_nDONE)
  2481                           
  2482                           ;incstack = 0
  2483                           ; Regs used in _adc_get_result: [wreg]
  2484                           
  2485  0183  0021               	movlb	1	; select bank1
  2486  0184  1C9D               	btfss	29,1	;volatile
  2487  0185  298A               	goto	i1l1042
  2488                           
  2489                           ;sequencer.c: 374: {
  2490                           ;sequencer.c: 375: _delay((unsigned long)((25)*(1000000/4000000.0)));
  2491  0186  3200               	nop2	;2 cycle nop
  2492  0187  3200               	nop2	;2 cycle nop
  2493  0188  3200               	nop2	;2 cycle nop
  2494  0189  2983               	goto	i1l167
  2495  018A                     i1l1042:	
  2496                           
  2497                           ;sequencer.c: 376: }
  2498                           ;sequencer.c: 378: adc_value = ADRESH;
  2499  018A  081C               	movf	28,w	;volatile
  2500  018B  00F2               	movwf	??_adc_get_result
  2501  018C  01F3               	clrf	??_adc_get_result+1
  2502  018D  0872               	movf	??_adc_get_result,w
  2503  018E  00F4               	movwf	adc_get_result@adc_value
  2504  018F  0873               	movf	??_adc_get_result+1,w
  2505  0190  00F5               	movwf	adc_get_result@adc_value+1
  2506                           
  2507                           ;sequencer.c: 379: adc_value <<= 8;
  2508  0191  3008               	movlw	8
  2509  0192                     u19_25:	
  2510  0192  35F4               	lslf	adc_get_result@adc_value,f
  2511  0193  0DF5               	rlf	adc_get_result@adc_value+1,f
  2512  0194  0B89               	decfsz	9,f
  2513  0195  2992               	goto	u19_25
  2514                           
  2515                           ;sequencer.c: 380: adc_value |= ADRESL;
  2516  0196  081B               	movf	27,w	;volatile
  2517  0197  00F2               	movwf	??_adc_get_result
  2518  0198  01F3               	clrf	??_adc_get_result+1
  2519  0199  0872               	movf	??_adc_get_result,w
  2520  019A  04F4               	iorwf	adc_get_result@adc_value,f
  2521  019B  0873               	movf	??_adc_get_result+1,w
  2522  019C  04F5               	iorwf	adc_get_result@adc_value+1,f
  2523                           
  2524                           ;sequencer.c: 381: return adc_value;
  2525  019D  0875               	movf	adc_get_result@adc_value+1,w
  2526  019E  00F1               	movwf	?_adc_get_result+1
  2527  019F  0874               	movf	adc_get_result@adc_value,w
  2528  01A0  00F0               	movwf	?_adc_get_result
  2529  01A1  0008               	return
  2530  01A2                     __end_of_adc_get_result:	
  2531                           
  2532                           	psect	text21
  2533  021D                     __ptext21:	
  2534 ;; *************** function _relay3_off *****************
  2535 ;; Defined at:
  2536 ;;		line 262 in file "sequencer.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;		None
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;		None
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      void 
  2543 ;; Registers used:
  2544 ;;		wreg, status,2, status,0
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2552 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2553 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2554 ;;Total ram usage:        1 bytes
  2555 ;; Hardware stack levels used:    1
  2556 ;; This function calls:
  2557 ;;		Nothing
  2558 ;; This function is called by:
  2559 ;;		_ISR
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           
  2564                           ;psect for function _relay3_off
  2565  021D                     _relay3_off:	
  2566                           
  2567                           ;sequencer.c: 264: portC &= ~0b00001000;
  2568                           
  2569                           ;incstack = 0
  2570                           ; Regs used in _relay3_off: [wreg+status,2+status,0]
  2571  021D  30F7               	movlw	247
  2572  021E  00F0               	movwf	??_relay3_off
  2573  021F  0870               	movf	??_relay3_off,w
  2574  0220  05FC               	andwf	_portC,f
  2575                           
  2576                           ;sequencer.c: 265: PORTC = portC;
  2577  0221  087C               	movf	_portC,w
  2578  0222  0020               	movlb	0	; select bank0
  2579  0223  008E               	movwf	14	;volatile
  2580  0224  0008               	return
  2581  0225                     __end_of_relay3_off:	
  2582                           
  2583                           	psect	text22
  2584  0225                     __ptext22:	
  2585 ;; *************** function _relay1_off *****************
  2586 ;; Defined at:
  2587 ;;		line 238 in file "sequencer.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;		None
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2603 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2604 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2605 ;;Total ram usage:        1 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; This function calls:
  2608 ;;		Nothing
  2609 ;; This function is called by:
  2610 ;;		_ISR
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           
  2615                           ;psect for function _relay1_off
  2616  0225                     _relay1_off:	
  2617                           
  2618                           ;sequencer.c: 240: portC &= ~0b00100000;
  2619                           
  2620                           ;incstack = 0
  2621                           ; Regs used in _relay1_off: [wreg+status,2+status,0]
  2622  0225  30DF               	movlw	223
  2623  0226  00F0               	movwf	??_relay1_off
  2624  0227  0870               	movf	??_relay1_off,w
  2625  0228  05FC               	andwf	_portC,f
  2626                           
  2627                           ;sequencer.c: 241: PORTC = portC;
  2628  0229  087C               	movf	_portC,w
  2629  022A  0020               	movlb	0	; select bank0
  2630  022B  008E               	movwf	14	;volatile
  2631  022C  0008               	return
  2632  022D                     __end_of_relay1_off:	
  2633  007E                     btemp	set	126	;btemp
  2634  007E                     int$flags	set	126
  2635  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80      2      12
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_run
    _startup->_adc_get_result
    _run->_adc_get_result

Critical Paths under _main in BANK0

    _init->_adc_set_channel

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      22
                                              1 BANK0      1     1      0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0      22
                           _adc_init
                    _adc_set_channel
               _adc_start_conversion
                         _timer_init
 ---------------------------------------------------------------------------------
 (2) _timer_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_start_conversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_set_channel                                      1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0      72
                                              8 COMMON     2     2      0
                         _pptled_off
                          _pptled_on
                         _relay1_off
                          _relay1_on
                         _relay2_off
                          _relay2_on
                         _relay3_off
                          _relay3_on
                                _run
                            _startup
 ---------------------------------------------------------------------------------
 (4) _startup                                              1     1      0      47
                                              6 COMMON     1     1      0
                     _adc_get_result
                           _ioc_init
                         _pptled_off
                          _pptled_on
                         _pwrled_off
                          _pwrled_on
                          _relay1_on
                          _relay2_on
                  i1_adc_set_channel
             i1_adc_start_conversion
 ---------------------------------------------------------------------------------
 (5) i1_adc_set_channel                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _pwrled_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _pwrled_off                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _pptled_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _pptled_off                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _ioc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _run                                                  2     2      0      25
                                              6 COMMON     2     2      0
                     _adc_get_result
                          _relay1_on
                         _relay2_off
                          _relay2_on
                          _relay3_on
             i1_adc_start_conversion
 ---------------------------------------------------------------------------------
 (5) i1_adc_start_conversion                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _relay3_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _relay2_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _relay2_off                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _relay1_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _adc_get_result                                       6     4      2      25
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _relay3_off                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _relay1_off                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _adc_init
     _adc_set_channel
     _adc_start_conversion
     _timer_init

 _ISR (ROOT)
   _pptled_off
   _pptled_on
   _relay1_off
   _relay1_on
   _relay2_off
   _relay2_on
   _relay3_off
   _relay3_on
   _run
     _adc_get_result
     _relay1_on
     _relay2_off
     _relay2_on
     _relay3_on
     i1_adc_start_conversion
   _startup
     _adc_get_result
     _ioc_init
     _pptled_off
     _pptled_on
     _pwrled_off
     _pwrled_on
     _relay1_on
     _relay2_on
     i1_adc_set_channel
     i1_adc_start_conversion

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       C       5       15.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      1A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      1A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sat Sep 07 15:16:45 2019

                     __CFG_CP$ON 0000                      __CFG_CPD$ON 0000          __end_of_adc_set_channel 01BF  
                    __CFG_LVP$ON 0000                              l161 01BE                              _PR2 001E  
                            _ISR 0004                              u357 01F3                              _run 00DF  
                            wreg 0009                             ?_ISR 0070                             l1020 01B5  
                           l1014 01A5                             l1016 01AD                             l1270 01EF  
                           ?_run 0070                     __CFG_WDTE$ON 0000                             _TMR2 001D  
                   __CFG_WRT$ALL 0000                    __CFG_FCMEN$ON 0000                             _main 01EC  
                           _init 013F                             btemp 007E                    __CFG_BOREN$ON 0000  
           _adc_start_conversion 024D                             start 006A                    __CFG_CSWEN$ON 0000  
                  __CFG_MCLRE$ON 0000                            ??_ISR 0078                            ??_run 0076  
                          ?_main 0070                            ?_init 0070                   __CFG_DEBUG$OFF 0000  
                          i1l115 0065                            i1l109 0063                            i1l161 01D9  
                          i1l167 0183                            i1l192 00CA                            _PORTA 000C  
                          _PORTC 000E                            u19_25 0192                            u27_25 00F8  
                          u28_25 0112                    __CFG_PWRTE$ON 0000                            _delay 0028  
                          _portA 007D                            _portC 007C                   __CFG_BORV$HIGH 0000  
                          status 0003                  __end_of_startup 00DF                            wtemp0 007E  
          ?_adc_start_conversion 0070                  __initialization 006C                     __end_of_main 01FA  
                   __end_of_init 0183                    _startup_count 0022                 ?_adc_set_channel 0070  
                         ??_main 002B                           ??_init 002B          __size_of_adc_get_result 001F  
                         _ADRESH 009C                           _ADRESL 009B               __CFG_RSTOSC$HFINT1 0000  
               __end_of_adc_init 0205                           i1l1100 00DC                           i1l1120 0115  
                         i1l1042 018A                           i1l1114 0107                           i1l1050 01C1  
                         i1l1132 0125                           i1l1124 011A                           i1l1140 013B  
                         i1l1052 01C9                           i1l1220 0015                           i1l1222 0017  
                         i1l1128 0120                           i1l1056 01D1                           i1l1072 009D  
                         i1l1138 012D                           i1l1090 00C0                           i1l1242 0031  
                         i1l1234 0026                           i1l1250 0042                           i1l1218 0012  
                         i1l1068 0092                           i1l1260 0050                           i1l1252 0046  
                         i1l1094 00CE                           i1l1238 002C                           i1l1256 004B  
                         i1l1248 0036                           i1l1266 0058                   __CFG_STVREN$ON 0000  
               __end_of_ioc_init 0234                           _status 007B                        ??_startup 0076  
        ?i1_adc_start_conversion 0070           ??_adc_start_conversion 002A          __end_of__initialization 0078  
                 __pcstackCOMMON 0070   __end_ofi1_adc_start_conversion 0253                       __pbssBANK0 0020  
                     __pmaintext 01EC               __size_of_relay1_on 0005               __size_of_relay2_on 0005  
             __size_of_relay3_on 0005                       __pintentry 0004                        ?_adc_init 0070  
                 _adc_get_result 0183               __size_of_pptled_on 0005               __size_of_pwrled_on 0005  
                      ?_ioc_init 0070                          _adc_sum 0020           __end_of_adc_get_result 01A2  
                     ??_adc_init 002A                          __ptext1 013F                          __ptext2 01DA  
                        __ptext3 024D                          __ptext4 01A2                          __ptext5 01FA  
                        __ptext7 007C                          __ptext8 01BF                          __ptext9 0234  
                   __size_of_ISR 0066                        _T2CONbits 001F                     __size_of_run 0060  
                      _IOCCFbits 0399                        _IOCCNbits 0398                        _IOCCPbits 0397  
                     _relay1_off 0225                       _relay2_off 0215                       _relay3_off 021D  
              __end_of_relay1_on 024D                __end_of_relay2_on 0248                __end_of_relay3_on 0243  
                        _startup 007C             end_of_initialization 0078                       ??_ioc_init 0070  
       i1adc_set_channel@channel 0070                __end_of_pptled_on 023E                __end_of_pwrled_on 0239  
                ?_adc_get_result 0070                       _timer_init 01DA                        _PORTCbits 000E  
              i1_adc_set_channel 01BF                       _pptled_off 020D                        _TRISAbits 008C  
                      _TRISCbits 008E               ?i1_adc_set_channel 0070         __size_of_adc_set_channel 001D  
               __CFG_FEXTOSC$OFF 0000              ??i1_adc_set_channel 0070                       _pwrled_off 0205  
      __end_ofi1_adc_set_channel 01DA              start_initialization 006C                      __end_of_ISR 006A  
                    ?_relay1_off 0070                      ?_relay2_off 0070                      ?_relay3_off 0070  
                    __end_of_run 013F    __size_of_adc_start_conversion 0003                 __CFG_LPBOREN$OFF 0000  
                    ?_timer_init 0070                __size_of_adc_init 000B                      ?_pptled_off 0070  
                    __pbssCOMMON 007A                        ___latbits 0002                    __pcstackBANK0 002A  
                      _adc_count 007A                        _adc_value 0026          adc_get_result@adc_value 0074  
                    ?_pwrled_off 0070                ??_adc_set_channel 002A                __size_of_ioc_init 0007  
                      __pnvBANK0 0028              __size_of_relay1_off 0008              __size_of_relay2_off 0008  
            __size_of_relay3_off 0008                 __CFG_PPS1WAY$OFF 0000       __size_ofi1_adc_set_channel 001B  
                       ?_startup 0070                        _relay1_on 0248                        _relay2_on 0243  
                      _relay3_on 023E              __size_of_timer_init 0012                         _PIE0bits 0090  
                       _PIE1bits 0091                         _PIR1bits 0011              __size_of_pptled_off 0008  
         adc_set_channel@channel 002A                 ??_adc_get_result 0072                        _pptled_on 0239  
                     _ADCON0bits 009D                       _ADCON1bits 009E         ??i1_adc_start_conversion 0070  
            __size_of_pwrled_off 0008                        _pwrled_on 0234                       ?_relay1_on 0070  
                     ?_relay2_on 0070                       ?_relay3_on 0070                       ?_pptled_on 0070  
                       _adc_init 01FA                       _ANSELAbits 018C                       _ANSELCbits 018E  
                     ?_pwrled_on 0070                     ??_relay1_off 0070                     ??_relay2_off 0070  
                   ??_relay3_off 0070                         __ptext10 0205                         __ptext11 0239  
                       __ptext20 0183                         __ptext12 020D                         __ptext21 021D  
                       __ptext13 022D                         __ptext22 0225                         __ptext14 00DF  
                       __ptext15 0250                         __ptext16 023E                         __ptext17 0243  
                       __ptext18 0215                         __ptext19 0248                 __size_of_startup 0063  
                       _ioc_init 022D                    __size_of_main 000E                    __size_of_init 0044  
                       int$flags 007E               __end_of_relay1_off 022D               __end_of_relay2_off 021D  
             __end_of_relay3_off 0225                     ??_timer_init 002A     __end_of_adc_start_conversion 0250  
__size_ofi1_adc_start_conversion 0003                       _INTCONbits 000B                     ??_pptled_off 0070  
                     _FVRCONbits 0117                  _adc_set_channel 01A2                         intlevel1 0000  
                    ??_relay1_on 0070                      ??_relay2_on 0070                      ??_relay3_on 0070  
                   ??_pwrled_off 0070                __CFG_CLKOUTEN$OFF 0000                  _interrupt_count 0024  
             __end_of_timer_init 01EC               __end_of_pptled_off 0215                      ??_pptled_on 0070  
                    ??_pwrled_on 0070               __end_of_pwrled_off 020D                       _WDTCONbits 0097  
         i1_adc_start_conversion 0250  
